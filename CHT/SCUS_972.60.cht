"War of the Monsters [Demo] /ID SCUS_972.60"
//ELF CRC 7CFD0559
Mastercode
90247C48 0C091EBA


//[Widescreen 16:9]

//Widescreen hacks by Aced14

//16:9 Widescreen

//Title Menu
206E0800 43BA0000 //43F80000 - Title Menu Master X FOV
206E0820 3F206D3A //3EF0A3D7 - Title Menu Master Y FOV

//1 Player
206E05C0 43900000 //43C00000 - 1P Master X FOV
206E05E0 3F206D3A //3EF0A3D7 - 1P Master Y FOV
206E0980 43900000 //43C00000 - Unified Master X FOV
206E09A0 3F206D3A //3EF0A3D7 - Unified Master Y FOV
10143070 0000C33A //3C01C30A - 1P + Unified Master X P1 HUD #1
10143074 00006666 //34214A3D - 1P + Unified Master X P1 HUD #2
10145D04 0000001E //24050028 - 1P + Unified P1 Pickup Notification X Position (40 -> 30)

//2 Players - Separator Bar
101446D8 0000FFFB //2473FFFA - 2P Separator Bar Width (-6 -> -5)

//2 Players - Unified View Black Bar Fix
//Prevents black bar from appearing in the far right of unified view in 2 player matches
E0010001 006F7D94 //00000000 - If gUseUnifiedView variable is 1...
20188758 00000000 //0C051172 - Remove reference to buildSeparator function
E0010000 006F7D94 //00000000 - If gUseUnifiedView variable is 0...
20188758 0C051172 //0C051172 - Restore reference to buildSeparator function

//2 Players - Unified View Black Bar Fix (alternate MIPS version)
//Useful if injecting the fix into a hacked ELF or if using an older PS2 cheat device.
//20188758 0C07F084 //0C051172 - jal $001fc210 - Jump to injected MIPS instructions (instead of buildSeparator function)
//201FC210 3C02006F //24020038 - lui v0, $006f - Load gUseUnifiedView variable into v0 register #1
//201FC214 8C427D94 //00A73821 - lw v0, $7d94(v0) - Load gUseUnifiedView variable into v0 register #2
//201FC218 14400003 //00822018 - bne v0, zero, $001fc228 - Skip next 2 lines (after below one) if gUseUnifiedView variable isn't equal to 0
//201FC21C 00000000 //00C84021 - nop - Delay slot
//201FC220 08051172 //3C020073 - j $001445c8 - Jump to buildSeparator function
//201FC224 00000000 //00073900 - nop - Delay slot
//201FC228 03E00008 //24424B90 - jr ra - Jump return
//201FC22C 00000000 //00084100 - nop - Delay slot

//2 Players - Player 1
206E0680 43840000 //43B00000 - 2P P1 Master X FOV
206E06A0 3F206D39 //3EF0A3D7 - 2P P1 Master Y FOV
101430A0 0000C2C7 //3C01C292 - 2P P1 Master X HUD #1
101430A4 00000000 //3421FE77 - 2P P1 Master X HUD #2
10145B34 0000001A //24050022 - 2P P1 Pickup Notification X Position (34 -> 26)

//2 Players - Player 2
206E0740 43840000 //43B00000 - 2P P2 Master X FOV
206E0760 3F206D39 //3EF0A3D7 - 2P P2 Master Y FOV
101430E8 000042C7 //3C014292 - 2P P2 Master X HUD #1
101430EC 00000000 //3421FE77 - 2P P2 Master X HUD #2
101430B4 0000433A //3C01430A - Unified Master X P2 HUD #1
101430B8 00006666 //34214A3D - Unified Master X P2 HUD #2
10145D34 00000262 //24050258 - Unified P2 Pickup Notification X Position (600 -> 610)
10145B5C 00000125 //2405011C - 2P P2 Pickup Notification X Position (284 -> 293)

//Health Icons
202A2308 00000014 //0000001A - Health Icon 1 Inner Width
202A2398 00000014 //0000001A - Health Icon 1 Outer Width
202A232C 00000014 //0000001A - Health Icon 2 Inner Width
202A23BC 00000014 //0000001A - Health Icon 2 Outer Width

//Distant Shadows
20259AE8 43C00000 //44000000 - Distant Shadows Width #1 (ZAxisAllLoop)
20259BB0 43C00000 //44000000 - Distant Shadows Width #2 (ZAxisClipXY2)

//Sprites
20259C50 43C00000 //44000000 - Nearby Sprites Width (SimpSpriteStart)
20259DA0 43C00000 //44000000 - Distant Sprites Width (SpriteAllStart)

//Loading Bar
20225034 3404014A //8FA40008 - Loading Bar Master X Width

//Generic Font - Width
//Impacts top + bottom title screen text, unselected unlocks screen text, and pause menu text.
101FBCE4 00000007 //24060005 - Generic Font Width (5 -> 7)

//Sub Pixels Font - Width and Spacing
//Impacts all other text.
201FC258 0807F046 //00832018 - j $001fc118 - Jump to injected MIPS instructions
201FC118 3C013F40 //27BDFFA0 - lui at, $3f40 - Set $f29 register to .75 #1
201FC11C 4481E800 //24030038 - mtc1 at, $f29 - Set $f29 register to .75 #2
201FC120 3C013F00 //7FB20030 - lui at, $3f00 - Set $f30 register to .5 #1
201FC124 4481F000 //3C020073 - mtc1 at, $f30 - Set $f30 register to .5 #2
201FC128 4485F800 //00839018 - mtc1 a1, $f31 - Convert int to float #1
201FC12C 4680FFE0 //7FB10020 - cvt.s.w $f31, $f31 - Convert int to float #2
201FC130 461DFFC2 //7FB00010 - mul.s $f31, $f31, $f29 - Multiply $f31 by $f29
201FC134 461EFFC0 //24424B90 - add.s $f31, $f31, $f30 - Add .5 for rounding
201FC138 4600FFE4 //E7B50058 - cvt.w.s $f31, $f31 - Convert float to int #1
201FC13C 4405F800 //00A0802D - mfc1 a1, $f31 - Convert float to int #2
201FC140 4487F800 //E7B40050 - mtc1 a3, $f31 - Convert int to float #1
201FC144 4680FFE0 //46006D46 - cvt.s.w $f31, $f31 - Convert int to float #2
201FC148 461DFFC2 //46006506 - mul.s $f31, $f31, $f29 - Multiply $f31 by $f29
201FC14C 461EFFC1 //7FBF0040 - sub.s $f31, $f31, $f30 - Subtract .5 for rounding
201FC150 4600FFE4 //02429021 - cvt.w.s $f31, $f31 - Convert float to int #1
201FC154 4407F800 //0C089EA6 - mfc1 a3, $f31 - Convert float to int #2
201FC158 0807F098 //00C0882D - j $001fc260 - Jump to 2 lines after the overwritten MIPS instruction
201FC15C 00832018 //03A0282D - mult a0, a0, v1 - Restore overwritten MIPS instruction from initial jump



