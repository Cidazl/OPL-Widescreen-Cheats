"War of the Monsters [Demo] /ID SCUS_972.60"
//ELF CRC 7CFD0559
Mastercode
90247c48 0c091eba


//[Widescreen 16:9]

//Widescreen hacks by Aced14

//16:9 Widescreen

//Title Menu
206e0800 43ba0000 //43F80000 - Title Menu Master X FOV
206e0820 3f206d3a //3EF0A3D7 - Title Menu Master Y FOV

//1 Player
206e05c0 43900000 //43C00000 - 1P Master X FOV
206e05e0 3f206d3a //3EF0A3D7 - 1P Master Y FOV
206e0980 43900000 //43C00000 - Unified Master X FOV
206e09a0 3f206d3a //3EF0A3D7 - Unified Master Y FOV
10143070 0000c33a //3C01C30A - 1P + Unified Master X P1 HUD #1
10143074 00006666 //34214A3D - 1P + Unified Master X P1 HUD #2
10145d04 0000001e //24050028 - 1P + Unified P1 Pickup Notification X Position (40 -> 30)

//2 Players - Separator Bar
101446d8 0000fffb //2473FFFA - 2P Separator Bar Width (-6 -> -5)

//2 Players - Unified View Black Bar Fix
//Prevents black bar from appearing in the far right of unified view in 2 player matches
e0010001 006f7d94 //00000000 - If gUseUnifiedView variable is 1...
20188758 00000000 //0C051172 - Remove reference to buildSeparator function
e0010000 006f7d94 //00000000 - If gUseUnifiedView variable is 0...
20188758 0c051172 //0C051172 - Restore reference to buildSeparator function

//2 Players - Unified View Black Bar Fix (alternate MIPS version)
//Useful if injecting the fix into a hacked ELF or if using an older PS2 cheat device.
//20188758 0c07f084 //0C051172 - jal $001fc210 - Jump to injected MIPS instructions (instead of buildSeparator function)
//201fc210 3c02006f //24020038 - lui v0, $006f - Load gUseUnifiedView variable into v0 register #1
//201fc214 8c427d94 //00A73821 - lw v0, $7d94(v0) - Load gUseUnifiedView variable into v0 register #2
//201fc218 14400003 //00822018 - bne v0, zero, $001fc228 - Skip next 2 lines (after below one) if gUseUnifiedView variable isn't equal to 0
//201fc21c 00000000 //00C84021 - nop - Delay slot
//201fc220 08051172 //3C020073 - j $001445c8 - Jump to buildSeparator function
//201fc224 00000000 //00073900 - nop - Delay slot
//201fc228 03e00008 //24424B90 - jr ra - Jump return
//201fc22c 00000000 //00084100 - nop - Delay slot

//2 Players - Player 1
206e0680 43840000 //43B00000 - 2P P1 Master X FOV
206e06a0 3f206d39 //3EF0A3D7 - 2P P1 Master Y FOV
101430a0 0000c2c7 //3C01C292 - 2P P1 Master X HUD #1
101430a4 00000000 //3421FE77 - 2P P1 Master X HUD #2
10145b34 0000001a //24050022 - 2P P1 Pickup Notification X Position (34 -> 26)

//2 Players - Player 2
206e0740 43840000 //43B00000 - 2P P2 Master X FOV
206e0760 3f206d39 //3EF0A3D7 - 2P P2 Master Y FOV
101430e8 000042c7 //3C014292 - 2P P2 Master X HUD #1
101430ec 00000000 //3421FE77 - 2P P2 Master X HUD #2
101430b4 0000433a //3C01430A - Unified Master X P2 HUD #1
101430b8 00006666 //34214A3D - Unified Master X P2 HUD #2
10145d34 00000262 //24050258 - Unified P2 Pickup Notification X Position (600 -> 610)
10145b5c 00000125 //2405011C - 2P P2 Pickup Notification X Position (284 -> 293)

//Health Icons
202a2308 00000014 //0000001A - Health Icon 1 Inner Width
202a2398 00000014 //0000001A - Health Icon 1 Outer Width
202a232c 00000014 //0000001A - Health Icon 2 Inner Width
202a23bc 00000014 //0000001A - Health Icon 2 Outer Width

//Distant Shadows
20259ae8 43c00000 //44000000 - Distant Shadows Width #1 (ZAxisAllLoop)
20259bb0 43c00000 //44000000 - Distant Shadows Width #2 (ZAxisClipXY2)

//Sprites
20259c50 43c00000 //44000000 - Nearby Sprites Width (SimpSpriteStart)
20259da0 43c00000 //44000000 - Distant Sprites Width (SpriteAllStart)

//Loading Bar
20225034 3404014a //8FA40008 - Loading Bar Master X Width

//Generic Font - Width
//Impacts top + bottom title screen text, unselected unlocks screen text, and pause menu text.
101fbce4 00000007 //24060005 - Generic Font Width (5 -> 7)

//Sub Pixels Font - Width and Spacing
//Impacts all other text.
201fc258 0807f046 //00832018 - j $001fc118 - Jump to injected MIPS instructions
201fc118 3c013f40 //27BDFFA0 - lui at, $3f40 - Set $f29 register to .75 #1
201fc11c 4481e800 //24030038 - mtc1 at, $f29 - Set $f29 register to .75 #2
201fc120 3c013f00 //7FB20030 - lui at, $3f00 - Set $f30 register to .5 #1
201fc124 4481f000 //3C020073 - mtc1 at, $f30 - Set $f30 register to .5 #2
201fc128 4485f800 //00839018 - mtc1 a1, $f31 - Convert int to float #1
201fc12c 4680ffe0 //7FB10020 - cvt.s.w $f31, $f31 - Convert int to float #2
201fc130 461dffc2 //7FB00010 - mul.s $f31, $f31, $f29 - Multiply $f31 by $f29
201fc134 461effc0 //24424B90 - add.s $f31, $f31, $f30 - Add .5 for rounding
201fc138 4600ffe4 //E7B50058 - cvt.w.s $f31, $f31 - Convert float to int #1
201fc13c 4405f800 //00A0802D - mfc1 a1, $f31 - Convert float to int #2
201fc140 4487f800 //E7B40050 - mtc1 a3, $f31 - Convert int to float #1
201fc144 4680ffe0 //46006D46 - cvt.s.w $f31, $f31 - Convert int to float #2
201fc148 461dffc2 //46006506 - mul.s $f31, $f31, $f29 - Multiply $f31 by $f29
201fc14c 461effc1 //7FBF0040 - sub.s $f31, $f31, $f30 - Subtract .5 for rounding
201fc150 4600ffe4 //02429021 - cvt.w.s $f31, $f31 - Convert float to int #1
201fc154 4407f800 //0C089EA6 - mfc1 a3, $f31 - Convert float to int #2
201fc158 0807f098 //00C0882D - j $001fc260 - Jump to 2 lines after the overwritten MIPS instruction
201fc15c 00832018 //03A0282D - mult a0, a0, v1 - Restore overwritten MIPS instruction from initial jump



